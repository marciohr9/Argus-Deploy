# Declara a network 'proxy' como externa na raiz do compose
- name: Declara network 'proxy' como externa na raiz
  ansible.builtin.set_fact:
    compose_data: >-
      {{
        compose_data
        | combine(
            { 'networks': { (proxy_network_name): { 'external': true } } },
            recursive=true
          )
      }}

# Anexa 'proxy' a todos os serviços (preservando existentes)
- name: Anexa 'proxy' às networks de cada serviço (como lista)
  vars:
    _svc_name: "{{ item.key }}"
    _svc: "{{ item.value }}"
    # Se 'networks' já é lista, usa como está; se for mapeamento, vira lista de chaves
    _current_nets: >-
      {{
        (_svc.networks | default([]))
        if (_svc.networks is sequence)
        else (
          (_svc.networks | default({})) | dict2items | map(attribute='key') | list
        )
      }}
    _new_nets: "{{ _current_nets | union([proxy_network_name]) }}"
  ansible.builtin.set_fact:
    compose_data: >-
      {{
        compose_data
        | combine(
            { 'services': { _svc_name: { 'networks': _new_nets } } },
            recursive=true
          )
      }}
  loop: "{{ (compose_data.services | default({})) | dict2items }}"
